version: "3"

services:
  frontend:
    container_name: frontend_dev
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    env_file:
      - .env.dev
    volumes:
      - ./src/frontend:/app
    depends_on:
      - backend
    networks:
      - app_network_dev

  nginx:
    container_name: nginx_dev
    build:
      context: ./src/nginx
      dockerfile: ./Dockerfile.dev
    env_file:
      - .env.dev
    volumes:
      - ./src/frontend:/var/www/html
      - images:/var/www/html/public/images
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - frontend
    networks:
      - app_network_dev

  backend:
    container_name: backend_dev
    build:
      context: ./src/backend
      dockerfile: Dockerfile.dev
    env_file:
      - .env.dev
      - ./src/backend/.env.dev
    volumes:
      - ./src/backend:/app
      - images:/app/src/images
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - db_network_dev
      - app_network_dev

  postgres:
    container_name: postgres_dev
    build: ./src/postgres/
    env_file:
      - .env.dev
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data/
    networks:
      - db_network_dev

volumes:
  postgres_data_dev:
    name: postgres_data_dev
  images:
    name: images_dev
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/public

networks:
  db_network_dev:
    name: db_network_dev
    driver: bridge
  app_network_dev:
    name: app_network_dev
    driver: bridge
