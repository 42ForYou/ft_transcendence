worker_processes auto; # Automatically determine the number of worker processes

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    upstream backend {
        server backend:443;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name 42foryou;

        return 301 https://yeonhkim.run$request_uri;
    }

    server {
        listen 443 default_server ssl;
        listen [::]:443 default_server ssl;
        server_name 42foryou;

        access_log /var/log/nginx/entry_point.access.log main;

        ssl_certificate /etc/nginx/ssl/42foryou.crt;
        ssl_certificate_key /etc/nginx/ssl/42foryou.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        root /var/www/html/dist;

        location / {
            try_files $uri $uri/ /index.html =404;
        }

        location /images {
            alias /var/www/html/public/images;
        }

        location /static {
            alias /var/www/html/backend/static;
        }

        location ~ ^/(admin|api) {
            proxy_pass https://backend$request_uri;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location ~ ^/(socket.io) {
            proxy_pass https://backend$request_uri;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
